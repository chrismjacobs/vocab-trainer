{"version":3,"sources":["webpack:///src/components/InstSent.vue","webpack:///./src/components/InstSent.vue?652d","webpack:///./src/components/InstSent.vue"],"names":["InstSent","name","props","s3","String","group","components","InstPicts","data","show","notes","scoreShow","pictShow","pictShowOne","quizList","quizFields","key","label","sortable","listFields","picture","methods","openClass","rec","this","workChecker","updates","$store","state","instructor","studentUpdates","checkCount","waitCount","w","console","log","showPicts","user","extends_default","showPictsOne","getLength","obj","keys_default","length","saveRecords","studentNotes","dispatch","classLoad","action","setPicture","word","link","userID","vocab","showModal","$refs","hideModal","hide","getImage","code","student","getVariant","quizCheck","find","element","def","text","editQuizList","quizEntry","index","indexOf","splice","push","stringify_default","removeFromList","computed","classRecords","getters","classGroups","getQuizArray","quizArray","s","v","setRecord","dictRecord","newVocab","created","beforeDestroy","components_InstSent","render","_vm","_h","$createElement","_c","_self","attrs","id","staticClass","align","staticStyle","width","height","on","click","$event","_v","_m","_l","item","_s","studentID","display","font-scale","overflow-y","x","class","toString","colspan","itemMaster","_e","striped","hover","items","fields","head-variant","sticky-header","scopedSlots","_u","fn","max-width","fluid","src","icon","aria-hidden","chinese","thumbnail","variant","ref","hide-header-close","hide-footer","title","staticRenderFns","scope","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"8MAiJAA,GACAC,KAAA,WACAC,OACAC,GAAAC,OACAC,MAAAD,QAEAE,YACAC,YAAA,SAEAC,KATA,WAUA,OACAC,KAAA,WACAC,SACAC,aACAC,YACAC,YAAA,KACAC,YACAC,aACAC,IAAA,OAAAC,MAAA,OAAAC,UAAA,IACAF,IAAA,YAAAC,MAAA,KAAAC,UAAA,IACAF,IAAA,OAAAC,MAAA,OAAAC,UAAA,IACAF,IAAA,OAAAC,MAAA,YACAD,IAAA,MAAAC,MAAA,QACAD,IAAA,OAAAC,MAAA,aACAD,IAAA,SAAAC,MAAA,SAAAC,UAAA,IACAF,IAAA,OAAAC,MAAA,OAAAC,UAAA,IAEAC,aACAH,IAAA,OAAAC,MAAA,OAAAC,UAAA,IACAF,IAAA,OAAAC,MAAA,YACAD,IAAA,MAAAC,MAAA,QACAD,IAAA,OAAAC,MAAA,aACAD,IAAA,SAAAC,MAAA,WAEAG,aAGAC,SACAC,UAAA,SAAArB,EAAAe,EAAAO,GACA,OAAAC,KAAAC,aAAA,EAAAT,EAAAO,GAAA,KACA,qCACAC,KAAAC,aAAA,EAAAT,EAAAO,GAAA,KACA,sCAEA,qCAGAE,YAAA,SAAAxB,EAAAe,EAAAO,GACA,IAAAG,GAAA,EACAhB,GAAA,EACAM,KAAAQ,KAAAG,OAAAC,MAAAC,WAAAC,iBACAJ,EAAAF,KAAAG,OAAAC,MAAAC,WAAAC,eAAAd,IAEAA,KAAAQ,KAAAd,QACAA,EAAAc,KAAAd,MAAAM,IAEA,IAAAe,EAAA,EACAC,EAAA,EACA,QAAAC,KAAAV,EACAG,KAAAO,IAAAvB,KAAAuB,IAAA,IAAAvB,EAAAuB,GAAA,QACAF,GAAA,EACA9B,GACAiC,QAAAC,IAAA,OAAAlC,EAAAe,EAAAiB,EAAAP,EAAAO,GAAAvB,EAAAuB,GAAA,SAEAvB,KAAAuB,IAAA,IAAAvB,EAAAuB,GAAA,OACAD,GAAA,EACA,OAAAT,EAAAU,GAAA,SACAF,GAAA,EACAG,QAAAC,IAAA,YAAAlC,EAAAe,EAAAiB,EAAAP,EAAAO,KAGA,OAAAF,EAAAC,IAEAI,UAAA,SAAAC,GACAb,KAAAZ,SAAAyB,IAAA,IAAAb,KAAAZ,SAAAyB,GAGAb,KAAAZ,SAAAyB,GAAA,EAFAb,KAAAZ,SAAAyB,GAAA,EAIAb,KAAAZ,SAAA0B,OAAAd,KAAAZ,UACAsB,QAAAC,IAAAE,EAAAb,KAAAZ,WAEA2B,aAAA,SAAAF,GACAb,KAAAX,cAAAwB,EACAb,KAAAX,YAAA,KAEAW,KAAAX,YAAAwB,GAGAG,UAAA,SAAAC,GAEA,cADAA,EAAA,IACAC,IAAAD,GAAAE,QAEAC,YAAA,WACApB,KAAAG,OAAAC,MAAAC,WAAAgB,mBAAA,aAAArB,KAAAf,MACAyB,QAAAC,IAAA,eACAX,KAAAG,OAAAmB,SAAA,kBAAAzC,MAAAmB,KAAAG,OAAAC,MAAAC,WAAAkB,UAAAC,OAAA,WAAAtC,MAAAc,KAAAG,OAAAC,MAAAC,WAAAgB,gBACA,SAAArB,KAAAf,MACAe,KAAAG,OAAAmB,SAAA,kBAAAzC,MAAAmB,KAAAG,OAAAC,MAAAC,WAAAkB,UAAAC,OAAA,cAAAtC,MAAAc,KAAAV,YAGAmC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA7B,KAAAJ,SACA8B,OACAC,OACAC,SACAC,SAEA7B,KAAA8B,aAEAA,UAAA,WACA9B,KAAA+B,MAAA,IAAA9C,QAEA+C,UAAA,WACAhC,KAAA+B,MAAA,IAAAE,QAEAC,SAAA,SAAAR,EAAAS,EAAAC,EAAAP,GACA,cAAAM,EACA,mEAEA,qEAAAC,EAAA,IAAAP,EAAA,IAAAH,EAAAS,EAAA,QAKAE,WAAA,SAAAX,EAAAE,GACA,IAAAU,EAAAtC,KAAAV,SAAAiD,KAAA,SAAAC,GAAA,OAAAA,EAAAd,UAAAc,EAAAZ,aAEA,OAAAU,EACAA,EAAAG,KAAAH,EAAAI,MACA,aACAJ,EAAAG,KACA,mBACAH,EAAAI,MACA,qBAEA,wBAGA,uBAGAC,aAAA,SAAAjB,EAAAe,EAAAC,EAAAf,EAAAC,EAAAC,GACA,IAAAe,GAAAlB,OAAAe,MAAAC,OAAAf,OAAAC,SAAAC,SACAS,EAAAtC,KAAAV,SAAAiD,KAAA,SAAAC,GAAA,OAAAA,EAAAd,UAAAc,EAAAZ,aACA,GAAAU,EACA,GAAAA,EAAAG,IACAH,EAAAG,IAAA,UACA,GAAAH,EAAAI,KACAJ,EAAAG,MACAH,EAAAI,KAAA,SACA,CACA,IAAAG,EAAA7C,KAAAV,SAAAwD,QAAAR,GACAO,GAAA,GACA7C,KAAAV,SAAAyD,OAAAF,EAAA,QAIA7C,KAAAV,SAAA0D,KAAAJ,GAEAlC,QAAAC,IAAAsC,IAAAjD,KAAAV,YAEA4D,eAAA,SAAAxB,EAAAE,GACA,IAAAU,EAAAtC,KAAAV,SAAAiD,KAAA,SAAAC,GAAA,OAAAA,EAAAd,UAAAc,EAAAZ,aACA,GAAAU,EAAA,CACA,IAAAO,EAAA7C,KAAAV,SAAAwD,QAAAR,GACAO,GAAA,GACA7C,KAAAV,SAAAyD,OAAAF,EAAA,GAGAnC,QAAAC,IAAAsC,IAAAjD,KAAAV,aAGA6D,UACAC,aADA,WAEA,OAAApD,KAAAG,OAAAkD,QAAAD,cAEAE,YAJA,WAKA,OAAAtD,KAAAG,OAAAkD,QAAAC,aAEAC,aAPA,WAQA,IAAAC,KACA,QAAAC,KAAAzD,KAAAoD,aACA,QAAAM,KAAA1D,KAAAoD,aAAAK,GAAAE,UAAAC,WAAA,CACA,IAAAC,EAAA/C,OAAAd,KAAAoD,aAAAK,GAAAE,UAAAC,WAAAF,IACAG,EAAA,KAAA7D,KAAAoD,aAAAK,GAAA,KACAI,EAAA,OAAAJ,EACAI,EAAA,UAAA7D,KAAAoD,aAAAK,GAAA,UACAzD,KAAAd,MAAAuE,IAAAzD,KAAAd,MAAAuE,GAAAC,KACAG,EAAA,OAAA7D,KAAAd,MAAAuE,GAAAC,GAAA,QAEAF,EAAAR,KAAAa,GAIA,OADAnD,QAAAC,IAAA,YAAA6C,GACAA,IAGAM,QAtMA,WAuMA9D,KAAAG,OAAAmB,SAAA,kBAAAzC,MAAAmB,KAAAnB,MAAA2C,OAAA,uBACAxB,KAAAG,OAAAmB,SAAA,kBAAAzC,MAAAmB,KAAAnB,MAAA2C,OAAA,yBACAxB,KAAAd,MAAA4B,OAAAd,KAAAG,OAAAC,MAAAC,WAAAgB,eAEA0C,cA3MA,cC9IeC,GADEC,OAFjB,WAA0B,IAAAC,EAAAlE,KAAamE,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,OAAOC,GAAA,cAAiBH,EAAA,OAAYI,YAAA,sBAAgCJ,EAAA,OAAYI,YAAA,gBAA0BJ,EAAA,SAAAA,EAAA,SAA0BE,OAAOG,MAAA,WAAiBL,EAAA,UAAeI,YAAA,0CAAAE,aAAmEC,MAAA,OAAAC,OAAA,QAA+BC,IAAKC,MAAA,SAAAC,GAAyB,OAAAd,EAAAnD,aAAA,WAAiCmD,EAAAe,GAAA,8CAAAf,EAAAe,GAAA,KAAAZ,EAAA,UAAgFI,YAAA,0CAAAE,aAAmEC,MAAA,OAAAC,OAAA,QAA+BC,IAAKC,MAAA,SAAAC,GAAyBd,EAAAjF,KAAA,eAAwBiF,EAAAe,GAAA,mDAAAf,EAAAe,GAAA,KAAAZ,EAAA,UAAqFI,YAAA,0CAAAE,aAAmEC,MAAA,OAAAC,OAAA,QAA+BC,IAAKC,MAAA,SAAAC,GAAyBd,EAAAjF,KAAA,WAAoBiF,EAAAe,GAAA,oDAAAf,EAAAe,GAAA,KAAAZ,EAAA,UAAsFI,YAAA,oCAAAE,aAA6DC,MAAA,OAAAC,OAAA,QAA+BC,IAAKC,MAAA,SAAAC,GAAyB,OAAAd,EAAA9C,kBAA2B8C,EAAAe,GAAA,oDAAAf,EAAAe,GAAA,kBAAAf,EAAAjF,KAAAoF,EAAA,SAA+GI,YAAA,wBAAkCP,EAAAgB,GAAA,GAAAhB,EAAAe,GAAA,KAAAZ,EAAA,SAAAH,EAAAiB,GAAAjB,EAAA,sBAAAkB,EAAA5F,GAAiF,OAAA6E,EAAA,MAAiB7E,QAAQ6E,EAAA,MAAWM,aAAaC,MAAA,WAAiBV,EAAAe,GAAAf,EAAAmB,GAAAD,EAAAE,cAAApB,EAAAe,GAAA,KAAAZ,EAAA,MAAwDM,aAAaC,MAAA,WAAiBV,EAAAe,GAAAf,EAAAmB,GAAAD,EAAAvE,SAAAqD,EAAAe,GAAA,KAAAZ,EAAA,MAAAA,EAAA,OAA6DM,aAAaC,MAAA,OAAAW,QAAA,kBAAyClB,EAAA,iBAAsBI,YAAA,YAAAF,OAA+BiB,aAAA,SAAoBtB,EAAAe,GAAA,IAAAf,EAAAmB,GAAAnB,EAAAlD,UAAAoE,EAAAzB,UAAAC,aAAA,oCAAAM,EAAAe,GAAA,KAAAZ,EAAA,OAAwHM,aAAaY,QAAA,kBAA0BlB,EAAA,iBAAsBM,aAAaC,MAAA,QAAAa,aAAA,SAAAF,QAAA,WAA0DrB,EAAAiB,GAAAC,EAAAzB,UAAA,oBAAA+B,EAAAlG,GAAoD,OAAA6E,EAAA,UAAoB7E,QAAQ0E,EAAAe,GAAA,IAAAf,EAAAmB,GAAA7F,GAAA,SAAgC,SAAA0E,EAAAe,GAAA,KAAAZ,EAAA,MAAgCE,OAAOG,MAAA,UAAgBL,EAAA,UAAesB,MAAAzB,EAAApE,UAAAsF,EAAAvE,KAAArB,EAAA4F,EAAAzB,UAAAC,YAAAe,aAA4EC,MAAA,OAAAC,OAAA,QAA+BC,IAAKC,MAAA,SAAAC,GAAyB,OAAAd,EAAAnD,aAAAvB,OAA+B0E,EAAAe,GAAA,qCAAAf,EAAAmB,GAAAnB,EAAAjE,YAAAmF,EAAAvE,KAAArB,EAAA4F,EAAAzB,UAAAC,aAAA,sCAAAM,EAAAe,GAAA,KAAAZ,EAAA,cAAoL7E,MAAA+E,OAAe9F,KAAA,gBAAqBe,EAAAoG,aAAA1B,EAAA7E,aAAA,QAAA6E,EAAA7E,YAAAgF,EAAA,MAAAA,EAAA,MAAuFE,OAAOsB,QAAA,OAAexB,EAAA,aAAkBE,OAAOnC,QAAA5C,EAAAsG,WAAAV,MAAiC,KAAAlB,EAAA6B,WAAoB,KAAA7B,EAAA6B,KAAA7B,EAAAe,GAAA,cAAAf,EAAAjF,KAAAoF,EAAA,WAAiEE,OAAOyB,QAAA,GAAAC,MAAA,GAAAC,MAAAhC,EAAA5E,SAAA6G,OAAAjC,EAAAvE,WAAAyG,eAAA,OAAAC,gBAAA,IAA8GC,YAAApC,EAAAqC,KAAsB/G,IAAA,aAAAgH,GAAA,SAAAxH,GAAmC,OAAAqF,EAAA,MAAAH,EAAAe,GAAA,IAAAf,EAAAmB,GAAArG,EAAAoG,KAAA1D,MAAA,WAA8DlC,IAAA,aAAAgH,GAAA,SAAAxH,GAAmC,OAAAqF,EAAA,SAAoBM,aAAa8B,YAAA,QAAmBlC,OAAQmC,MAAA,GAAAC,IAAAzC,EAAAhC,SAAAlD,EAAAoG,KAAA1D,KAAA1C,EAAAoG,KAAAzD,KAAA3C,EAAAoG,KAAAxD,OAAA5C,EAAAoG,KAAAvD,QAAiGiD,IAAKC,MAAA,SAAAC,GAAyB,OAAAd,EAAAzC,WAAAzC,EAAAoG,KAAA1D,KAAA1C,EAAAoG,KAAAzD,KAAA3C,EAAAoG,KAAAxD,OAAA5C,EAAAoG,KAAAvD,eAAiGrC,IAAA,YAAAgH,GAAA,SAAAxH,GAAkC,OAAAkF,EAAAe,GAAA,aAAAf,EAAAmB,GAAArG,EAAAoG,KAAA3C,KAAA,gBAAkEjD,IAAA,aAAAgH,GAAA,SAAAxH,GAAmC,OAAAkF,EAAAe,GAAA,aAAAf,EAAAmB,GAAArG,EAAAoG,KAAA1C,MAAA,gBAAmElD,IAAA,eAAAgH,GAAA,SAAAxH,GAAqC,OAAAqF,EAAA,YAAuBS,IAAIC,MAAA,SAAAC,GAAyB,OAAAd,EAAAhB,eAAAlE,EAAAoG,KAAA1D,KAAA1C,EAAAoG,KAAAxD,YAA8DyC,EAAA,UAAeE,OAAOqC,KAAA,QAAAC,cAAA,WAAqC,OAAQ,qBAAwB3C,EAAA6B,KAAA7B,EAAAe,GAAA,cAAAf,EAAAjF,KAAAoF,EAAA,WAA2DE,OAAOyB,QAAA,GAAAC,MAAA,GAAAC,MAAAhC,EAAAX,aAAA4C,OAAAjC,EAAA3E,WAAA6G,eAAA,QAA+FE,YAAApC,EAAAqC,KAAsB/G,IAAA,aAAAgH,GAAA,SAAAxH,GAAmC,OAAAqF,EAAA,MAAAH,EAAAe,GAAA,IAAAf,EAAAmB,GAAArG,EAAAoG,KAAA1D,MAAA,OAAAwC,EAAAe,GAAA,KAAAZ,EAAA,MAAAH,EAAAe,GAAA,IAAAf,EAAAmB,GAAArG,EAAAoG,KAAA0B,SAAA,WAA+HtH,IAAA,aAAAgH,GAAA,SAAAxH,GAAmC,OAAAqF,EAAA,SAAoBM,aAAa8B,YAAA,SAAoBlC,OAAQwC,UAAA,GAAAL,MAAA,GAAAC,IAAAzC,EAAAhC,SAAAlD,EAAAoG,KAAA1D,KAAA1C,EAAAoG,KAAAzD,KAAA3C,EAAAoG,KAAAxD,OAAA5C,EAAAoG,KAAAvD,cAAuHrC,IAAA,YAAAgH,GAAA,SAAAxH,GAAkC,OAAAkF,EAAAe,GAAA,aAAAf,EAAAmB,GAAArG,EAAAoG,KAAA3C,KAAA,gBAAkEjD,IAAA,aAAAgH,GAAA,SAAAxH,GAAmC,OAAAkF,EAAAe,GAAA,aAAAf,EAAAmB,GAAArG,EAAAoG,KAAA1C,MAAA,gBAAmElD,IAAA,aAAAgH,GAAA,SAAAxH,GAAmC,OAAAqF,EAAA,YAAuBI,YAAA,OAAAF,OAA0ByC,QAAA9C,EAAA7B,WAAArD,EAAAoG,KAAA1D,KAAA1C,EAAAoG,KAAAxD,QAAA,IAA8DkD,IAAKC,MAAA,SAAAC,GAAyB,OAAAd,EAAAvB,aAAA3D,EAAAoG,KAAA1D,KAAA1C,EAAAoG,KAAA3C,IAAAzD,EAAAoG,KAAA1C,KAAA1D,EAAAoG,KAAAzD,KAAA3C,EAAAoG,KAAAxD,OAAA5C,EAAAoG,KAAAvD,WAA4HwC,EAAA,UAAeE,OAAOqC,KAAA,QAAAC,cAAA,WAAqC,GAAA3C,EAAAe,GAAA,aAAAf,EAAAmB,GAAAnB,EAAA7B,WAAArD,EAAAoG,KAAA1D,KAAA1C,EAAAoG,KAAAxD,QAAA,oBAAoG,qBAAwBsC,EAAA6B,MAAA,GAAA7B,EAAAe,GAAA,KAAAZ,EAAA,WAAyC4C,IAAA,MAAA1C,OAAiB2C,oBAAA,GAAAxC,MAAA,SAAAyC,cAAA,GAAAC,MAAA,WAA0E/C,EAAA,OAAYI,YAAA,YAAsBJ,EAAA,SAAcM,aAAa8B,YAAA,SAAoBlC,OAAQwC,UAAA,GAAAL,MAAA,GAAAC,IAAAzC,EAAAhC,SAAAgC,EAAAtE,QAAA8B,KAAAwC,EAAAtE,QAAA+B,KAAAuC,EAAAtE,QAAAgC,OAAAsC,EAAAtE,QAAAiC,WAAyH,GAAAqC,EAAAe,GAAA,KAAAZ,EAAA,UAA+BI,YAAA,oCAAAE,aAA6DC,MAAA,OAAcE,IAAKC,MAAA,SAAAC,GAAyB,OAAAd,EAAAlC,gBAAyBkC,EAAAe,GAAA,kBAEh4KoC,iBADjB,WAAoC,IAAalD,EAAbnE,KAAaoE,eAA0BC,EAAvCrE,KAAuCsE,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,SAAAA,EAAA,MAAAA,EAAA,MAAqCE,OAAO+C,MAAA,SAA3GtH,KAA0HiF,GAAA,QAA1HjF,KAA0HiF,GAAA,KAAAZ,EAAA,MAAsCE,OAAO+C,MAAA,SAAvKtH,KAAsLiF,GAAA,aAAtLjF,KAAsLiF,GAAA,KAAAZ,EAAA,MAA2CE,OAAO+C,MAAA,SAAxOtH,KAAuPiF,GAAA,iBCE3R,IAcAsC,EAdyBC,EAAQ,OAcjCC,CACEjJ,EACAwF,GATF,EAVA,SAAA0D,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/16.59556347535b16e2337e.js","sourcesContent":["\n<template>\n  <div id=\"instSent\">\n\n    <div class=\"bg-white mt-0 p-0\">\n\n      <div class=\"bg-grey p-2\">\n        <b-row>\n          <b-col align=\"right\">\n\n            <button class=\"buttonDiv bg-safe-light text-prime px-3\" style=\"width:auto; height:auto\" @click=\"showPictsOne('all')\">\n                    Show All\n            </button>\n\n            <button class=\"buttonDiv bg-safe-light text-prime px-3\" style=\"width:auto; height:auto\" @click=\"show = 'students'\">\n                    Show Students\n            </button>\n\n            <button class=\"buttonDiv bg-safe-light text-prime px-3\" style=\"width:auto; height:auto\" @click=\"show = 'quiz'\">\n                    Show Quiz List\n            </button>\n\n            <button class=\"buttonDiv bg-safe text-cream px-3\" style=\"width:auto; height:auto\" @click=\"saveRecords()\">\n                    Save\n            </button>\n          </b-col>\n        </b-row>\n      </div>\n\n      <table class=\"table table-striped\" v-if=\"show === 'students'\">\n              <thead>\n                    <tr>\n                      <th scope=\"col\">ID</th>\n                      <th scope=\"col\">Student</th>\n                      <th scope=\"col\">Pics</th>\n                    </tr>\n              </thead>\n                    <tbody>\n                      <template v-for=\"(item, key) in classRecords\">\n                        <tr :key=\"key\">\n                          <td  style=\"width:150px\" >{{item.studentID}}</td>\n                          <td  style=\"width:150px\" >{{item.user}}</td>\n                          <td>\n                            <div style=\"width:70px; display:inline-block\">\n                            <b-icon-images class=\"text-safe\" font-scale=\"1.5\" ></b-icon-images> {{getLength(item.setRecord.dictRecord)}}\n                            </div>\n                            <div style=\"display:inline-block\">\n                               <b-form-select style=\"width:100px;overflow-y: hidden; display:inline\">\n                                <option v-for=\"(x, key) in item.setRecord.dictRecord\" :key=\"key\"> {{key}} </option>\n                              </b-form-select>\n                            </div>\n                          </td>\n                          <td align=\"left\">\n                            <button :class=\"openClass(item.user, key, item.setRecord.dictRecord)\" style=\"width:auto; height:auto\" @click=\"showPictsOne(key)\">\n                                  {{workChecker(item.user, key, item.setRecord.dictRecord)}}\n                            </button>\n                          </td>\n\n                        </tr>\n\n                        <transition name=\"tableboard\" :key=\"key\">\n                          <!--<tr v-if=\"key.toString() in pictShow && pictShow[key.toString()] === 1\">-->\n                          <tr v-if=\"key.toString() === pictShowOne || pictShowOne === 'all' \">\n                            <td colspan=\"6\">\n                              <InstPicts :student=\"key\" :itemMaster=\"item\" ></InstPicts>\n                            </td>\n                          </tr>\n                        </transition>\n                      </template>\n\n                    </tbody>\n      </table>\n\n      <b-table\n      v-if=\"show === 'quiz'\"\n      striped hover\n      :items=\"quizList\"\n      :fields=\"listFields\"\n      head-variant=\"dark\"\n      sticky-header\n      >\n        <template v-slot:cell(word)=\"data\">\n          <h5> {{data.item.word}} </h5>\n        </template>\n        <template v-slot:cell(link)=\"data\">\n        <b-img @click=\"setPicture(data.item.word, data.item.link, data.item.userID, data.item.vocab)\" style=\"max-width:30px\" fluid :src=\"getImage(data.item.word, data.item.link, data.item.userID, data.item.vocab)\"></b-img>\n        </template>\n        <template v-slot:cell(def)=\"data\">\n          {{data.item.def}}\n        </template>\n        <template v-slot:cell(text)=\"data\">\n          {{data.item.text}}\n        </template>\n        <template v-slot:cell(userID)=\"data\">\n          <b-button @click=\"removeFromList(data.item.word, data.item.userID)\">\n            <b-icon icon=\"cross\" aria-hidden=\"true\"></b-icon>\n          </b-button>\n        </template>\n      </b-table>\n\n      <b-table\n      v-if=\"show === 'quiz'\"\n      striped hover\n      :items=\"getQuizArray\"\n      :fields=\"quizFields\"\n      head-variant=\"dark\"\n      >\n        <template v-slot:cell(word)=\"data\">\n          <h5> {{data.item.word}} </h5>\n          <h6> {{data.item.chinese}} </h6>\n        </template>\n        <template v-slot:cell(link)=\"data\">\n        <b-img style=\"max-width:100px\" thumbnail fluid :src=\"getImage(data.item.word, data.item.link, data.item.userID, data.item.vocab)\"></b-img>\n        </template>\n        <template v-slot:cell(def)=\"data\">\n          {{data.item.def}}\n        </template>\n        <template v-slot:cell(text)=\"data\">\n          {{data.item.text}}\n        </template>\n        <template v-slot:cell(code)=\"data\">\n          <b-button :variant=\"getVariant(data.item.word, data.item.userID)[0]\" class=\"mb-2\" @click=\"editQuizList(data.item.word, data.item.def, data.item.text, data.item.link, data.item.userID, data.item.vocab)\">\n            <b-icon icon=\"power\" aria-hidden=\"true\"></b-icon>\n          </b-button>\n          {{getVariant(data.item.word, data.item.userID)[1]}}\n        </template>\n\n      </b-table>\n\n    </div>\n\n    <b-modal hide-header-close align=\"center\" ref=\"pic\" hide-footer title=\"Image\">\n      <div class=\"d-block\">\n         <b-img style=\"max-width:200px\" thumbnail fluid :src=\"getImage(picture.word, picture.link, picture.userID, picture.vocab)\"></b-img>\n      </div>\n      <button class=\"buttonDiv mt-3 bg-warn text-cream\" style=\"width:60%\"  @click=\"hideModal()\">Close</button>\n    </b-modal>\n\n  </div>\n\n</template>\n\n<script>\nimport InstPicts from './InstPicts'\n\nexport default {\n  name: 'InstSent',\n  props: {\n    s3: String,\n    group: String\n  },\n  components: {\n    InstPicts\n  },\n  data () {\n    return {\n      show: 'students',\n      notes: {},\n      scoreShow: {},\n      pictShow: {},\n      pictShowOne: null,\n      quizList: [],\n      quizFields: [\n        {key: 'user', label: 'User', sortable: true},\n        {key: 'studentID', label: 'ID', sortable: true},\n        {key: 'word', label: 'Word', sortable: true},\n        {key: 'link', label: 'Picture'},\n        {key: 'def', label: 'Def'},\n        {key: 'text', label: 'Sentence'},\n        {key: 'status', label: 'Status', sortable: true},\n        {key: 'code', label: 'code', sortable: true}\n      ],\n      listFields: [\n        {key: 'word', label: 'Word', sortable: true},\n        {key: 'link', label: 'Picture'},\n        {key: 'def', label: 'Def'},\n        {key: 'text', label: 'Sentence'},\n        {key: 'userID', label: 'Action'}\n      ],\n      picture: {}\n    }\n  },\n  methods: {\n    openClass: function (name, key, rec) {\n      if (this.workChecker(false, key, rec)[0] > 0) {\n        return 'buttonDiv bg-alert text-cream px-3'\n      } else if (this.workChecker(false, key, rec)[1] > 0) {\n        return 'buttonDiv bg-second text-cream px-3'\n      } else {\n        return 'buttonDiv bg-safe text-cream px-3'\n      }\n    },\n    workChecker: function (name, key, rec) {\n      let updates = false\n      let notes = false\n      if (key in this.$store.state.instructor.studentUpdates) {\n        updates = this.$store.state.instructor.studentUpdates[key]\n      }\n      if (key in this.notes) {\n        notes = this.notes[key]\n      }\n      var checkCount = 0\n      var waitCount = 0\n      for (let w in rec) {\n        if (updates && updates[w] && notes && notes[w] && notes[w]['status'] !== 1) {\n          checkCount += 1\n          if (name) {\n            console.log('redo', name, key, w, updates[w], notes[w]['status'])\n          }\n        } else if (notes && notes[w] && notes[w]['status'] !== 1) {\n          waitCount += 1\n        } else if (rec[w]['status'] === null) {\n          checkCount += 1\n          console.log('new entry', name, key, w, updates[w])\n        }\n      }\n      return [checkCount, waitCount]\n    },\n    showPicts: function (user) {\n      if (!this.pictShow[user] || this.pictShow[user] === 0) {\n        this.pictShow[user] = 1\n      } else {\n        this.pictShow[user] = 0\n      }\n      this.pictShow = {...this.pictShow}\n      console.log(user, this.pictShow)\n    },\n    showPictsOne: function (user) {\n      if (this.pictShowOne === user) {\n        this.pictShowOne = null\n      } else {\n        this.pictShowOne = user\n      }\n    },\n    getLength: function (obj) {\n      delete obj['add']\n      return Object.keys(obj).length\n    },\n    saveRecords: function () {\n      if (this.$store.state.instructor.studentNotes !== {} && this.show === 'students') {\n        console.log('saveRecords')\n        this.$store.dispatch('instructorLogs', { group: this.$store.state.instructor.classLoad, action: 'setNotes', notes: this.$store.state.instructor.studentNotes })\n      } else if (this.show === 'quiz') {\n        this.$store.dispatch('instructorLogs', { group: this.$store.state.instructor.classLoad, action: 'setPictQuiz', notes: this.quizList })\n      }\n    },\n    setPicture: function (word, link, userID, vocab) {\n      this.picture = {\n        word: word,\n        link: link,\n        userID: userID,\n        vocab: vocab\n      }\n      this.showModal()\n    },\n    showModal: function () {\n      this.$refs['pic'].show()\n    },\n    hideModal: function () {\n      this.$refs['pic'].hide()\n    },\n    getImage: function (word, code, student, vocab) {\n      if (code === 'add') {\n        return 'https://vocab-lms.s3-ap-northeast-1.amazonaws.com/public/add.jpg'\n      } else {\n        let link = 'https://vocab-lms.s3-ap-northeast-1.amazonaws.com/public/profiles/' + student + '/' + vocab + '/' + word + code + '.jpg'\n        // console.log(link)\n        return link\n      }\n    },\n    getVariant: function (word, userID) {\n      let quizCheck = this.quizList.find(element => element.word === word && element.userID === userID)\n\n      if (quizCheck) {\n        if (quizCheck.def && quizCheck.text) {\n          return ['safe', null]\n        } else if (quizCheck.def) {\n          return ['warn', 'Def Only']\n        } else if (quizCheck.text) {\n          return ['warn', 'Text Only']\n        } else {\n          return ['info', 'Picture Only']\n        }\n      } else {\n        return ['outline-alert', null]\n      }\n    },\n    editQuizList: function (word, def, text, link, userID, vocab) {\n      let quizEntry = {word: word, def: def, text: text, link: link, userID: userID, vocab: vocab}\n      let quizCheck = this.quizList.find(element => element.word === word && element.userID === userID)\n      if (quizCheck) {\n        if (quizCheck.def) {\n          quizCheck.def = null\n        } else if (quizCheck.text) {\n          quizCheck.def = def\n          quizCheck.text = null\n        } else {\n          let index = this.quizList.indexOf(quizCheck)\n          if (index > -1) {\n            this.quizList.splice(index, 1)\n          }\n        }\n      } else {\n        this.quizList.push(quizEntry)\n      }\n      console.log(JSON.stringify(this.quizList))\n    },\n    removeFromList: function (word, userID) {\n      let quizCheck = this.quizList.find(element => element.word === word && element.userID === userID)\n      if (quizCheck) {\n        let index = this.quizList.indexOf(quizCheck)\n        if (index > -1) {\n          this.quizList.splice(index, 1)\n        }\n      }\n      console.log(JSON.stringify(this.quizList))\n    }\n  },\n  computed: {\n    classRecords () {\n      return this.$store.getters.classRecords\n    },\n    classGroups () {\n      return this.$store.getters.classGroups\n    },\n    getQuizArray () {\n      let quizArray = []\n      for (let s in this.classRecords) {\n        for (let v in this.classRecords[s].setRecord.dictRecord) {\n          let newVocab = {...this.classRecords[s].setRecord.dictRecord[v]}\n          newVocab['user'] = this.classRecords[s]['user']\n          newVocab['userID'] = s\n          newVocab['studentID'] = this.classRecords[s]['studentID']\n          if (this.notes[s] && this.notes[s][v]) {\n            newVocab['status'] = this.notes[s][v]['status']\n          }\n          quizArray.push(newVocab)\n        }\n      }\n      console.log('quizArray', quizArray)\n      return quizArray\n    }\n  },\n  created () {\n    this.$store.dispatch('instructorLogs', { group: this.group, action: 'getNotesInstructor' })\n    this.$store.dispatch('instructorLogs', { group: this.group, action: 'getUpdatesInstructor' })\n    this.notes = {...this.$store.state.instructor.studentNotes}\n  },\n  beforeDestroy () {\n    // this.saveRecords()\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/InstSent.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"instSent\"}},[_c('div',{staticClass:\"bg-white mt-0 p-0\"},[_c('div',{staticClass:\"bg-grey p-2\"},[_c('b-row',[_c('b-col',{attrs:{\"align\":\"right\"}},[_c('button',{staticClass:\"buttonDiv bg-safe-light text-prime px-3\",staticStyle:{\"width\":\"auto\",\"height\":\"auto\"},on:{\"click\":function($event){return _vm.showPictsOne('all')}}},[_vm._v(\"\\n                  Show All\\n          \")]),_vm._v(\" \"),_c('button',{staticClass:\"buttonDiv bg-safe-light text-prime px-3\",staticStyle:{\"width\":\"auto\",\"height\":\"auto\"},on:{\"click\":function($event){_vm.show = 'students'}}},[_vm._v(\"\\n                  Show Students\\n          \")]),_vm._v(\" \"),_c('button',{staticClass:\"buttonDiv bg-safe-light text-prime px-3\",staticStyle:{\"width\":\"auto\",\"height\":\"auto\"},on:{\"click\":function($event){_vm.show = 'quiz'}}},[_vm._v(\"\\n                  Show Quiz List\\n          \")]),_vm._v(\" \"),_c('button',{staticClass:\"buttonDiv bg-safe text-cream px-3\",staticStyle:{\"width\":\"auto\",\"height\":\"auto\"},on:{\"click\":function($event){return _vm.saveRecords()}}},[_vm._v(\"\\n                  Save\\n          \")])])],1)],1),_vm._v(\" \"),(_vm.show === 'students')?_c('table',{staticClass:\"table table-striped\"},[_vm._m(0),_vm._v(\" \"),_c('tbody',[_vm._l((_vm.classRecords),function(item,key){return [_c('tr',{key:key},[_c('td',{staticStyle:{\"width\":\"150px\"}},[_vm._v(_vm._s(item.studentID))]),_vm._v(\" \"),_c('td',{staticStyle:{\"width\":\"150px\"}},[_vm._v(_vm._s(item.user))]),_vm._v(\" \"),_c('td',[_c('div',{staticStyle:{\"width\":\"70px\",\"display\":\"inline-block\"}},[_c('b-icon-images',{staticClass:\"text-safe\",attrs:{\"font-scale\":\"1.5\"}}),_vm._v(\" \"+_vm._s(_vm.getLength(item.setRecord.dictRecord))+\"\\n                          \")],1),_vm._v(\" \"),_c('div',{staticStyle:{\"display\":\"inline-block\"}},[_c('b-form-select',{staticStyle:{\"width\":\"100px\",\"overflow-y\":\"hidden\",\"display\":\"inline\"}},_vm._l((item.setRecord.dictRecord),function(x,key){return _c('option',{key:key},[_vm._v(\" \"+_vm._s(key)+\" \")])}),0)],1)]),_vm._v(\" \"),_c('td',{attrs:{\"align\":\"left\"}},[_c('button',{class:_vm.openClass(item.user, key, item.setRecord.dictRecord),staticStyle:{\"width\":\"auto\",\"height\":\"auto\"},on:{\"click\":function($event){return _vm.showPictsOne(key)}}},[_vm._v(\"\\n                                \"+_vm._s(_vm.workChecker(item.user, key, item.setRecord.dictRecord))+\"\\n                          \")])])]),_vm._v(\" \"),_c('transition',{key:key,attrs:{\"name\":\"tableboard\"}},[(key.toString() === _vm.pictShowOne || _vm.pictShowOne === 'all' )?_c('tr',[_c('td',{attrs:{\"colspan\":\"6\"}},[_c('InstPicts',{attrs:{\"student\":key,\"itemMaster\":item}})],1)]):_vm._e()])]})],2)]):_vm._e(),_vm._v(\" \"),(_vm.show === 'quiz')?_c('b-table',{attrs:{\"striped\":\"\",\"hover\":\"\",\"items\":_vm.quizList,\"fields\":_vm.listFields,\"head-variant\":\"dark\",\"sticky-header\":\"\"},scopedSlots:_vm._u([{key:\"cell(word)\",fn:function(data){return [_c('h5',[_vm._v(\" \"+_vm._s(data.item.word)+\" \")])]}},{key:\"cell(link)\",fn:function(data){return [_c('b-img',{staticStyle:{\"max-width\":\"30px\"},attrs:{\"fluid\":\"\",\"src\":_vm.getImage(data.item.word, data.item.link, data.item.userID, data.item.vocab)},on:{\"click\":function($event){return _vm.setPicture(data.item.word, data.item.link, data.item.userID, data.item.vocab)}}})]}},{key:\"cell(def)\",fn:function(data){return [_vm._v(\"\\n        \"+_vm._s(data.item.def)+\"\\n      \")]}},{key:\"cell(text)\",fn:function(data){return [_vm._v(\"\\n        \"+_vm._s(data.item.text)+\"\\n      \")]}},{key:\"cell(userID)\",fn:function(data){return [_c('b-button',{on:{\"click\":function($event){return _vm.removeFromList(data.item.word, data.item.userID)}}},[_c('b-icon',{attrs:{\"icon\":\"cross\",\"aria-hidden\":\"true\"}})],1)]}}],null,false,236416297)}):_vm._e(),_vm._v(\" \"),(_vm.show === 'quiz')?_c('b-table',{attrs:{\"striped\":\"\",\"hover\":\"\",\"items\":_vm.getQuizArray,\"fields\":_vm.quizFields,\"head-variant\":\"dark\"},scopedSlots:_vm._u([{key:\"cell(word)\",fn:function(data){return [_c('h5',[_vm._v(\" \"+_vm._s(data.item.word)+\" \")]),_vm._v(\" \"),_c('h6',[_vm._v(\" \"+_vm._s(data.item.chinese)+\" \")])]}},{key:\"cell(link)\",fn:function(data){return [_c('b-img',{staticStyle:{\"max-width\":\"100px\"},attrs:{\"thumbnail\":\"\",\"fluid\":\"\",\"src\":_vm.getImage(data.item.word, data.item.link, data.item.userID, data.item.vocab)}})]}},{key:\"cell(def)\",fn:function(data){return [_vm._v(\"\\n        \"+_vm._s(data.item.def)+\"\\n      \")]}},{key:\"cell(text)\",fn:function(data){return [_vm._v(\"\\n        \"+_vm._s(data.item.text)+\"\\n      \")]}},{key:\"cell(code)\",fn:function(data){return [_c('b-button',{staticClass:\"mb-2\",attrs:{\"variant\":_vm.getVariant(data.item.word, data.item.userID)[0]},on:{\"click\":function($event){return _vm.editQuizList(data.item.word, data.item.def, data.item.text, data.item.link, data.item.userID, data.item.vocab)}}},[_c('b-icon',{attrs:{\"icon\":\"power\",\"aria-hidden\":\"true\"}})],1),_vm._v(\"\\n        \"+_vm._s(_vm.getVariant(data.item.word, data.item.userID)[1])+\"\\n      \")]}}],null,false,816181112)}):_vm._e()],1),_vm._v(\" \"),_c('b-modal',{ref:\"pic\",attrs:{\"hide-header-close\":\"\",\"align\":\"center\",\"hide-footer\":\"\",\"title\":\"Image\"}},[_c('div',{staticClass:\"d-block\"},[_c('b-img',{staticStyle:{\"max-width\":\"200px\"},attrs:{\"thumbnail\":\"\",\"fluid\":\"\",\"src\":_vm.getImage(_vm.picture.word, _vm.picture.link, _vm.picture.userID, _vm.picture.vocab)}})],1),_vm._v(\" \"),_c('button',{staticClass:\"buttonDiv mt-3 bg-warn text-cream\",staticStyle:{\"width\":\"60%\"},on:{\"click\":function($event){return _vm.hideModal()}}},[_vm._v(\"Close\")])])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"ID\")]),_vm._v(\" \"),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Student\")]),_vm._v(\" \"),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Pics\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0dda605e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/InstSent.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0dda605e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./InstSent.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InstSent.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InstSent.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0dda605e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./InstSent.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0dda605e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/InstSent.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}